version: '3.8'

services:
  # Kafka cluster
  apicurio:
    container_name: apicurio
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9091
    expose:
      - 8001
    image: apicurio/apicurio-registry-mem:latest-release
    networks:
      - kafka_network
    ports:
      - 8001:8080

  kafka:
    container_name: kafka
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_BROKER_ID: 1
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9091,CONTROLLER://:9093,LOCALHOST://:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,LOCALHOST:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9091,LOCALHOST://localhost:9092
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@127.0.0.1:9093
    image: bitnami/kafka
    networks:
      - kafka_network
    ports:
      - 9092:9092

  kafka-ui:
    container_name: kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: kiskotaan-local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9091
    expose:
      - 8000
    image: provectuslabs/kafka-ui
    networks:
      - kafka_network
    ports:
      - 8000:8080

  # Database
  postgres:
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    image: postgres
    networks:
      - postgres_network
    ports:
      - 5432:5432
    volumes:
      - ./db:/docker-entrypoint-initdb.d

  # Kiskotaan applications
  players_service:
    container_name: players_service
    depends_on:
      - apicurio
      - kafka
      - postgres
    environment:
      apicurio_url: apicurio:8001
      db_url: jdbc:postgresql://postgres:5432/players_db
      db_username: admin
      db_password: admin
      kafka_url: kafka:9091
    expose:
      - 8081
    image: mikaalaoutinen/players-service
    networks:
      - kafka_network
      - postgres_network
    ports:
      - 8081:8081

  courses_service:
    container_name: courses_service
    depends_on:
      - apicurio
      - kafka
      - postgres
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9091
      MP_MESSAGING_CONNECTOR_SMALLRYE_KAFKA_APICURIO_REGISTRY_URL: http://apicurio:8080/apis/registry/v2
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/courses_db
      QUARKUS_DATASOURCE_USERNAME: admin
      QUARKUS_DATASOURCE_PASSWORD: admin
    expose:
      - 8082
    image: mikaalaoutinen/courses-service
    networks:
      - kafka_network
      - postgres_network
    ports:
      - 8082:8082

  scorecards_service:
    container_name: scorecards_service
    depends_on:
      - apicurio
      - kafka
      - postgres
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9091
      MP_MESSAGING_CONNECTOR_SMALLRYE_KAFKA_APICURIO_REGISTRY_URL: http://apicurio:8080/apis/registry/v2
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/scorecards_db
      QUARKUS_DATASOURCE_USERNAME: admin
      QUARKUS_DATASOURCE_PASSWORD: admin
    expose:
      - 8083
    image: mikaalaoutinen/scorecards-service
    networks:
      - kafka_network
      - postgres_network
    ports:
      - 8083:8083

  logging_service:
    container_name: logging_service
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9091
    expose:
      - 8085
    image: mikaalaoutinen/logging-service
    networks:
      - kafka_network
    ports:
      - 8085:8085

networks:
  kafka_network:
    driver: bridge
  postgres_network:
    driver: bridge
